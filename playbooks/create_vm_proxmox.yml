---
- hosts: all
  become: true
  gather_facts: no
  collections:
    - community.general
  vars:
    ansible_python_interpreter: /root/proxmoxer-env/bin/python3
    venv_path: /root/proxmoxer-env
    api_user: root@pam
    api_password: pass # <- senha
    api_host: pve # <- nome do host
    proxmox_node: pve # <- igual o de cima
    template_vmid: aqui # <- nome do template para o clone
    ip_proxmox: ip:8006
    gateway_ip: 192.168.0.3 # <- numero do ip do gateway
    proxmox_timeout: 1200
    timeout: 1200

  tasks:
    - name: Clonar o template
      community.general.proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ api_host }}"
        node: "{{ proxmox_node }}"
        clone: "{{ template_vmid }}"
        newid: "{{ new_vm_id | int }}"
        name: "{{ new_vm_name }}"
        storage: local-lvm
        full: yes
        timeout: "{{ timeout }}"
      tags:
        - clone

    - name: Obter ticket de autenticação
      uri:
        url: https://{{ ip_proxmox }}/api2/json/access/ticket
        method: POST
        body_format: form-urlencoded
        body:
          username: root@pam
          password: "{{ api_password }}"
        headers:
          Content-Type: application/x-www-form-urlencoded
        validate_certs: no
      register: auth_response
      tags:
        - notes

    - name: Extrair dados de autenticação via JSON
      set_fact:
        pve_ticket: "{{ auth_response.json.data.ticket }}"
        csrf_token: "{{ auth_response.json.data.CSRFPreventionToken }}"
      tags:
        - notes

    - name: Adicionar notas à VM
      uri:
        url: https://{{ ip_proxmox }}/api2/json/nodes/{{ proxmox_node }}/qemu/{{
          new_vm_id | int }}/config
        method: POST
        body_format: form-urlencoded
        body:
          description: "{{ notes }}"
        headers:
          Content-Type: application/x-www-form-urlencoded
          CSRFPreventionToken: "{{ csrf_token }}"
          Cookie: PVEAuthCookie={{ pve_ticket }}
        validate_certs: no
      register: note_response
      tags:
        - notes

    - name: Inserir o novo IP na VM
      uri:
        url: "https://{{ ip_proxmox }}/api2/json/nodes/{{ proxmox_node }}/qemu/{{ new_vm_id | int }}/config"
        method: POST
        body_format: form-urlencoded
        body:
          ipconfig0: "ip={{ new_ip }}/24,gw={{ gateway_ip }}"
        headers:
          Content-Type: application/x-www-form-urlencoded
          CSRFPreventionToken: "{{ csrf_token }}"
          Cookie: PVEAuthCookie={{ pve_ticket }}
        validate_certs: no
      register: ip_update_response
      tags:
        - ip

    - name: Atualizando espaço em disco
      community.general.proxmox_disk:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ api_host }}"
        vmid: "{{ new_vm_id | int }}"
        disk: scsi0
        size: "{{ disk_resize | int}}"
        state: resized
      tags:
      - disco

    - name: Atualizando memória RAM e vCPU
      community.general.proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ api_host }}"
        node: "{{ proxmox_node }}"
        vmid: "{{ new_vm_id | int }}"
        memory: "{{ memory | int}}"
        cores: "{{ core | int}}"
        update: yes
      tags:
        - memoria

    - name: Ligando a nova VM
      community.general.proxmox_kvm:
        api_user: root@pam
        api_password: "{{ api_password }}"
        api_host: "{{ api_host }}"
        name: "{{ new_vm_name }}"
        timeout: 600
        state: started
      tags:
        - ligar
